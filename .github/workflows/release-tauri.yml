name: "Release Tauri App"
on:
  push:
    branches:
      - release
    tags:
      - "tauri-v*"
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(?<version>.*)"
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "tauri-v${{ steps.tagName.outputs.version }}",
              name: "AutoCorrect Desktop v${{ steps.tagName.outputs.version }}",
              body: "See the assets to download this version and install.",
              draft: true,
              prerelease: false
            })

            return data.id
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: universal-apple-darwin
            os: macos-latest
          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"
          node-version: 14

      # Cache files between builds
      - name: Setup | Cache Cargo
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: tauri-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Add Rust target
        if: matrix.os != 'macos-latest'
        run: |
          rustup target add ${{ matrix.target }}
      - name: Add macOS target
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin 
          rustup target add x86_64-apple-darwin
      - name: Install & Build
        run: |
          cd autocorrect-tauri
          yarn && yarn build
      # - name: Deploy | Upload artifacts
      #   uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     projectPath: autocorrect-tauri/
      #     releaseId: ${{ needs.create-release.outputs.RELEASE_ID }}
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: 49AD00B657FC50C78045B23504501BAEE745A0BE
        with:
          releaseId: ${{ needs.create-release.outputs.RELEASE_ID }}
          args: --target ${{ matrix.target }} -- -v
          projectPath: autocorrect-tauri/
          releaseName: "AutoCorrect Desktop v__VERSION__"
          tagName: tauri-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version

