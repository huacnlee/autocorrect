name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  # Build sources for every OS
  github_build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: autocorrect-linux-amd64.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: autocorrect-darwin-amd64.tar.gz

          - target: aarch64-apple-darwin
            os: macOS-latest
            name: autocorrect-darwin-arm64.tar.gz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: autocorrect-windows-amd64.tar.gz

          - target: aarch64-pc-windows-msvc
            os: windows-latest
            name: autocorrect-windows-arm64.tar.gz

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.3.4

      # Cache files between builds
      - name: Setup | Cache Cargo
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        # TODO: Remove this once it's the default
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        with:
          command: build
          args: --release --features bin --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip autocorrect.exe
          7z a ../../../${{ matrix.name }} autocorrect.exe
          cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          # TODO: investigate better cross platform stripping
          strip autocorrect || true
          tar czvf ../../../${{ matrix.name }} autocorrect
          cd -

      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  # Create GitHub release with Rust build targets and release notes
  github_release:
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2

      - name: Setup | Checksums
        run: for file in autocorrect-*/autocorrect-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: autocorrect-*/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
