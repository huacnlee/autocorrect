name: Release Python
on:
  push:
    tags:
      - "v*"
jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist -m autocorrect-py/Cargo.toml
      - name: Build wheels - aarch64
        uses: messense/maturin-action@v1
        with:
          target: aarch64
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist -m autocorrect-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [macos, windows, linux, linux-cross, musllinux, musllinux-cross]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
